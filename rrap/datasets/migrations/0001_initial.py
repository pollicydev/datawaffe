# Generated by Django 3.2.15 on 2022-11-26 09:17

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=255, verbose_name='name')),
                ('title', models.CharField(help_text='Title of dataset', max_length=255, verbose_name='title')),
                ('summary', models.TextField(help_text='Please provide a summary of this dataset.', max_length=300, verbose_name='overview')),
                ('file_mime', models.CharField(max_length=255, null=True)),
                ('file_url', models.URLField(blank=True, null=True)),
                ('privacy', models.SmallIntegerField(choices=[(0, 'By request (Anyone can search and view the metadata of this dataset. Registered users can submit a request to obtain the data directly from you, by email, file transfer, etc.)'), (1, 'Private (Only you and other members of your organisation can search, view/edit or download this dataset)'), (2, 'Public (Anyone can search, view/edit or download this dataset)')], default=2, verbose_name='Privacy setting')),
                ('doc_type', models.SmallIntegerField(choices=[(0, 'Report'), (1, 'Toolkit'), (2, 'Article'), (3, 'Laws'), (4, 'Speech'), (5, 'Video'), (6, 'Audio'), (7, 'Book'), (8, 'Magazine'), (9, 'Artwork'), (10, 'Manua/Guide/Framework')], default=0, verbose_name='Document type')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='last updated')),
                ('archived', models.BooleanField(default=False, verbose_name='Archived?')),
                ('update_frequency', models.SmallIntegerField(choices=[(0, 'Every week'), (1, 'Every two weeks'), (2, 'Every month'), (3, 'Every three months'), (4, 'Every six months'), (5, 'Every year'), (6, 'As needed'), (7, 'Never')], default=6, verbose_name='Update frequency')),
                ('methodology', models.SmallIntegerField(choices=[(0, 'Census'), (1, 'Sample survey'), (2, 'Direct observational/Anecdotal data'), (3, 'Registry'), (4, 'Other')], default=1, verbose_name='Data methodology')),
                ('caveats', models.TextField(blank=True, max_length=400, null=True, verbose_name='Caveats/Comments')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('tag_val', models.CharField(blank=True, default='', max_length=100, verbose_name='Spaces')),
                ('has_pii', models.BooleanField(default=False, verbose_name='Contains Personally Identifiable Information (PII) e.g names, phone numbers, Identification number, etc')),
                ('has_microdata', models.BooleanField(default=False, verbose_name='Contains microdata e.g household survey results, disaggregated needs assessment data, etc')),
                ('quality_confirmed', models.BooleanField(default=False, verbose_name="Dataset's quality has been confirmed")),
                ('status', models.SmallIntegerField(choices=[(0, 'Draft'), (1, 'Published')], default=0)),
                ('download_count', models.IntegerField(blank=True, db_index=True, default=0)),
                ('follow_count', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
    ]
