# Generated by Django 3.2.15 on 2022-12-30 10:38

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0066_collection_management_permissions'),
        ('wagtaildocs', '0012_uploadeddocument'),
        ('wagtailimages', '0023_add_choose_permissions'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('organizations', '0025_organisationindexpage'),
        ('core', '0021_publicationsindexpage'),
    ]

    operations = [
        migrations.CreateModel(
            name='PublicationPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('summary', models.TextField(blank=True, help_text='Text to describe the publication')),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
                ('date_published', models.DateTimeField(default=django.utils.timezone.now, help_text='This date may be displayed on the publication. It is not used to schedule publications to go live at a later date.', verbose_name='Date of publishing')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document')),
                ('organisations', modelcluster.fields.ParentalManyToManyField(blank=True, to='organizations.OrganisationPage')),
                ('pub_types', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='publications', to='core.PublicationType', verbose_name='Publication type')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PublicationTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='core.publicationpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='core_publicationtag_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='publicationpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='core.PublicationTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='publicationpage',
            name='thumbnail',
            field=models.ForeignKey(blank=True, help_text='Portrait mode only', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image'),
        ),
        migrations.AddField(
            model_name='publicationpage',
            name='topics',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='core.Topic'),
        ),
    ]
