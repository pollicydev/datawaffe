# Generated by Django 3.2.15 on 2023-03-02 11:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import rrap.organizations.models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0027_swkeypopulation_swservice_swviolation'),
        ('organizations', '0030_auto_20230302_1241'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='lgbtqorganisation',
            options={'verbose_name': 'LGBTQ Organisation', 'verbose_name_plural': 'LGBTQ Organisations'},
        ),
        migrations.AlterModelOptions(
            name='pwuidsorganisation',
            options={'verbose_name': 'PWUIDs Organisation', 'verbose_name_plural': 'PWUIDs Organisations'},
        ),
        migrations.AlterModelOptions(
            name='sexworkorganisation',
            options={'verbose_name': 'Sex Workers Organisation', 'verbose_name_plural': 'Sex Workers Organisations'},
        ),
        migrations.RemoveField(
            model_name='organisationpage',
            name='communities',
        ),
        migrations.RemoveField(
            model_name='organisationpage',
            name='services',
        ),
        migrations.AddField(
            model_name='lgbtqorganisation',
            name='communities',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, related_name='organisations', to='core.KeyPopulation'),
        ),
        migrations.AddField(
            model_name='lgbtqorganisation',
            name='services',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, related_name='organisations', to='core.Service'),
        ),
        migrations.AddField(
            model_name='pwuidsorganisation',
            name='communities',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, related_name='pwuid_organisations', to='core.KeyPopulation'),
        ),
        migrations.AddField(
            model_name='pwuidsorganisation',
            name='services',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, related_name='pwuid_organisations', to='core.Service'),
        ),
        migrations.AddField(
            model_name='sexworkorganisation',
            name='communities',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, related_name='sw_organisations', to='core.SWKeyPopulation'),
        ),
        migrations.AddField(
            model_name='sexworkorganisation',
            name='services',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, related_name='sw_organisations', to='core.SWService'),
        ),
        migrations.AlterField(
            model_name='sexworkorganisation',
            name='age',
            field=models.CharField(blank=True, choices=[('', 'N/A'), ('15-19', '15-19 years'), ('20-24', '20-24 years'), ('25-29', '25-29 years'), ('30-34', '30-34 years'), ('35-39', '35-39 years'), ('40-44', '40-44 years'), ('45-49', '45-49 years'), ('50-54', '50-54 years'), ('55-59', '55-59 years'), ('60-64', '60-64 years'), ('65-69', '65-69 years'), ('70-74', '70-74 years'), ('75-79', '75-79 years'), ('80+', '80 years and above')], help_text='Select range that applies', max_length=30, verbose_name='Average age of members'),
        ),
        migrations.AlterField(
            model_name='sexworkorganisation',
            name='gender',
            field=models.CharField(blank=True, choices=[('', 'N/A'), ('Trans', 'Transgender sex workers'), ('LGB', 'LGB sex workers'), ('Gay', 'Gay sex workers'), ('MBisexual', 'Male bisexual sex workers'), ('FBisexual', 'Female bisexual sex workers')], max_length=10, verbose_name='Gender and sexual orientation of members'),
        ),
        migrations.AlterField(
            model_name='sexworkorganisation',
            name='sexwork_type',
            field=models.CharField(blank=True, choices=[('', 'N/A'), ('Street', 'Street-based'), ('Brothel', 'Brothel-based'), ('Escort', 'Escort work')], help_text='Types of sex work activities performed', max_length=10, verbose_name='Sex work activity type'),
        ),
        migrations.CreateModel(
            name='SWViolenceEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('occurences', models.PositiveSmallIntegerField(blank=True, default=0, help_text='How many violations of this nature did you deal with?', null=True)),
                ('period', models.PositiveSmallIntegerField(blank=True, default=2023, help_text='Enter year of record', null=True, validators=[django.core.validators.MinValueValidator(2000), rrap.organizations.models.max_value_current_year])),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='sw_violations', to='organizations.sexworkorganisation')),
                ('violation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.swviolation')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SWCommunityReach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('reach', models.PositiveSmallIntegerField(blank=True, default=0, help_text='How many people in this community did you reach?', null=True)),
                ('period', models.PositiveSmallIntegerField(blank=True, default=2023, help_text='Enter year of record', null=True, validators=[django.core.validators.MinValueValidator(2000), rrap.organizations.models.max_value_current_year])),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sw_comm_reach', to='core.swkeypopulation')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='sw_reach', to='organizations.sexworkorganisation')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
